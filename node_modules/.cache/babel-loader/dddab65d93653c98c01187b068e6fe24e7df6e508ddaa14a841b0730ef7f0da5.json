{"ast":null,"code":"import { GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCdkXtibUpJxzMda8VC5QCLVPG4l4kqlQE\",\n  authDomain: \"chat-app-44f96.firebaseapp.com\",\n  projectId: \"chat-app-44f96\",\n  storageBucket: \"chat-app-44f96.appspot.com\",\n  messagingSenderId: \"713961132173\",\n  appId: \"1:713961132173:web:070545bdefac1f9da5d2c4\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n\nasync function loginWithGoogle() {\n  try {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    const {\n      user\n    } = await signInWithPopup(auth, provider);\n    return {\n      uid: user.uid,\n      displayName: user.displayName\n    };\n  } catch (error) {\n    if (error.code !== 'auth/cancelled-popup-request') {\n      console.error(error);\n    }\n    return null;\n  }\n}\n\n// async function sendMessage(roomId, user, text) {\n//     try {\n//         await addDoc(collection(db, 'chat-rooms', roomId, 'messages'), {\n//             uid: user.uid,\n//             displayName: user.displayName,\n//             text: text.trim(),\n//             timestamp: serverTimestamp(),\n//         });\n//     } catch (error) {\n//         console.error(error);\n//     }\n// }\n\n// function getMessages(roomId, callback) {\n//     return onSnapshot(\n//         query(\n//             collection(db, 'chat-rooms', roomId, 'messages'),\n//             orderBy('timestamp', 'asc')\n//         ),\n//         (querySnapshot) => {\n//             const messages = querySnapshot.docs.map((x) => ({\n//                 id: x.id,\n//                 ...x.data(),\n//             }));\n\n//             callback(messages);\n//         }\n//     );\n// }\n\nexport { loginWithGoogle };","map":{"version":3,"names":["GoogleAuthProvider","signInWithPopup","getAuth","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","loginWithGoogle","provider","auth","user","uid","displayName","error","code","console"],"sources":["/Users/mazharkhan/Desktop/chat-app/vibe-chat/src/services/firebase.js"],"sourcesContent":["\nimport { GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCdkXtibUpJxzMda8VC5QCLVPG4l4kqlQE\",\n  authDomain: \"chat-app-44f96.firebaseapp.com\",\n  projectId: \"chat-app-44f96\",\n  storageBucket: \"chat-app-44f96.appspot.com\",\n  messagingSenderId: \"713961132173\",\n  appId: \"1:713961132173:web:070545bdefac1f9da5d2c4\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n\nasync function loginWithGoogle() {\n    try {\n        const provider = new GoogleAuthProvider();\n        const auth = getAuth();\n\n        const { user } = await signInWithPopup(auth, provider);\n\n        return { uid: user.uid, displayName: user.displayName };\n    } catch (error) {\n        if (error.code !== 'auth/cancelled-popup-request') {\n            console.error(error);\n        }\n        return null;\n    }\n}\n\n// async function sendMessage(roomId, user, text) {\n//     try {\n//         await addDoc(collection(db, 'chat-rooms', roomId, 'messages'), {\n//             uid: user.uid,\n//             displayName: user.displayName,\n//             text: text.trim(),\n//             timestamp: serverTimestamp(),\n//         });\n//     } catch (error) {\n//         console.error(error);\n//     }\n// }\n\n// function getMessages(roomId, callback) {\n//     return onSnapshot(\n//         query(\n//             collection(db, 'chat-rooms', roomId, 'messages'),\n//             orderBy('timestamp', 'asc')\n//         ),\n//         (querySnapshot) => {\n//             const messages = querySnapshot.docs.map((x) => ({\n//                 id: x.id,\n//                 ...x.data(),\n//             }));\n\n//             callback(messages);\n//         }\n//     );\n// }\n\nexport { loginWithGoogle };"],"mappings":"AACA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,OAAO,QAAQ,eAAe;AAC5E,SAASC,aAAa,QAAQ,cAAc;AAC5C;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGR,aAAa,CAACC,cAAc,CAAC;AACzC;;AAEA,eAAeQ,eAAeA,CAAA,EAAG;EAC7B,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIb,kBAAkB,EAAE;IACzC,MAAMc,IAAI,GAAGZ,OAAO,EAAE;IAEtB,MAAM;MAAEa;IAAK,CAAC,GAAG,MAAMd,eAAe,CAACa,IAAI,EAAED,QAAQ,CAAC;IAEtD,OAAO;MAAEG,GAAG,EAAED,IAAI,CAACC,GAAG;MAAEC,WAAW,EAAEF,IAAI,CAACE;IAAY,CAAC;EAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACC,IAAI,KAAK,8BAA8B,EAAE;MAC/CC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;IACxB;IACA,OAAO,IAAI;EACf;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAASN,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}